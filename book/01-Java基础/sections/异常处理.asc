
=== 异常处理

image::Java异常类层次结构图.png[]

==== Error和Exception的区别

`Error` 类是指 java 运行时系统的内部错误和资源耗尽错误。比如说内存溢出 +
`Exception` 表示一种设计或实现问题

Exception又有两个分支, 一个是检查异常 CheckedException，这类异常必须被显示的捕获或抛出；一个是不检查异常 UncheckedException ，这类异常不必捕获或抛出。

几种常见的运行时异常： +
ClassCastException(类转换异常) +
IndexOutOfBoundsException(数组越界) +
NullPointerException(空指针异常) +
ArrayStoreException(数据存储异常,操作数组是类型不一致)



==== 异常处理方式

1. 异常捕捉:try...catch...finally
2. 异常抛出:throws。

[NOTE]
throw 和 throws 的区别: +
throws 用在函数上,后面跟的是异常类,可以跟多个,用于声明异常; + 
而 throw 用在函数内,后面跟的是异常对象，throw 抛出具体的问题对象,执行到 throw,功能就已经结束了



===== try...catch...finally

.1. try 里有 return ，finally 还执行么？ 如果会的话，什么时候执行，在 return 之前还是 return 之后？
- finally块里的代码在return之前执行
- 如果finally块中有return语句，它将覆盖掉函数中其他return语句
- 如果 finally 块中改变了 try 块中返回变量的值，该变量为基本数据类型的话，则 finally 块中改变变量值的语句将不起作用；如果该变量为引用变量的话，则起作用。

.2. finally 块中的代码不执行的情况
- try 块执行之前，出现了异常，则程序终止
- 在 try 块中执行了 System.exit(0)

