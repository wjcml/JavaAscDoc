=== 面向对象

.1. 什么是对象？
----
一切事物皆对象
----

.2. 什么是类？
----
类就是具有相同属性和功能的对象的抽象的集合
----

.3. 什么是实例和实例化？
----
- 实例就是一个真实的对象
- 实例化就是创建对象的过程
- Cat cat = new Cat()，做了两件事：
    Cat cat：声明一个Cat的对象，对象名为cat
    cat = new Cat()：将此cat对象实例化
----

面向对象的几大特性：`抽象`，`封装`，`继承`，`多态`

Java类（`Class`）不支持多继承，但是支持多重继承，可以通过接口解决不能多继承的问题。接口（`interface`）支持多继承，可以 `extents` 多个接口。

==== 普通类，抽象类，接口

.普通类
----
普通类不能包含抽象方法
普通类可以直接实例化
----

.抽象类
----
抽象类可以包含抽象方法
抽象类不能直接实例化

抽象方法,只有行为的概念,没有具体的行为实现。使用abstract关键字修饰,没有方法体。子类必须重写这些抽象方法。
包含抽象方法的类,一定是抽象类。
抽象类只能被继承,一个类只能继承一个抽象类。
----

.接口
----
全部的方法都是抽象方法,属性都是常量
不能实例化,可以定义变量。
接口只能被实现,一个具体类实现接口,必须实现全部的抽象方法
接口之间可以多实现
一个具体类可以实现多个接口,实现多继承现象
----

[NOTE]
构造方法不能被重写：因为 `重写是子类方法重写父类的方法，重写的方法名不变，而类的构造方法名必须与类名一致，假设父类的构造方法如果能够被子类重写则子类类名必须与父类类名一致才行，所以 Java 的构造方法是不能被重写的。`




