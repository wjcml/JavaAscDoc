=== ThreadLocal 作用(线程本地存储)

最常见的 ThreadLocal 使用场景为：

- 用来解决 数据库连接、Session 管理等。
- 还可以保存针对某个线程的所有输出日志，然后统一保存日志，比如说定时任务日志。


ThreadLocal,很多地方叫做线程本地变量,也有些地方叫做线程本地存储, ThreadLocal 的作用是提供线程内的局部变量,这种变量在线程的生命周期内起作用,减少同一个线程内多个函数或者组件之间一些公共变量的传递的复杂度。


==== ThreadLocal结构

在 ThreadLocal 中，有一个内部类 *ThreadLocalMap*。ThreadLocalMap 中定义了一个 *Entry 数组*。

*Thread* 类有一个类型为 *ThreadLocal.ThreadLocalMap* 的实例变量 *threadLocals*，也就是说每个线程有一个自己的 *ThreadLocalMap*。

*ThreadLocalMap* 有自己的独立实现，可以简单地将它的 *key* 视作 *ThreadLocal*，*value* 为代码中放入的值（实际上 *key* 并不是 *ThreadLocal* 本身，而是它的一个 *弱引用*）。

每个线程在往 *ThreadLocal* 里放值的时候，都会先获取当前线程的 *ThreadLocalMap*，然后往自己的 *ThreadLocalMap* 里存，读也是以 *ThreadLocal* 作为引用，在自己的 *map* 里找对应的 *key*，从而实现了 *线程隔离*。

我们还要注意 *Entry*， 它的 *key* 是 *ThreadLocal<?> k* ，继承自 *WeakReference*， 也就是我们常说的 *弱引用类型*。

