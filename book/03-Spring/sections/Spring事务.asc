=== Spring事务
事务是逻辑上的一组操作，要么都执行，要么都不执行。

==== 事务的四大特性（ACID）

image::事务四大特性.png[]

*原子性*：事务所包含的全部操作是一个整体，要么全部提交成功，要么全部失败。 + 
*一致性*：要求事务所包含的操作不能违反数据资源的一致性检查，即在事务执行之后数据之间保持着一致。 + 
*隔离性*：多个事务执行，各个事务之间相互影响的程度。当两个事务同时访问一个数据资源的时候，不同的隔离级别决定了各个事务对该数据资源访问的不同行为。事务隔离分为不同级别，包括 *读未提交（Read uncommitted）、读已提交（read committed）、可重复读（repeatable read）和串行化（Serializable）*。 + 
*持久性*：一旦整个事务的操作成功提交，对数据所作的变更将被记载并且不可逆转。

==== 并发事务带来的问题？
*脏读*：当一个事务正在访问数据并且对数据进行了修改，而这种修改还没有提交到数据库中，这时另外一个事务也访问了这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据，那么另外一个事务读到的这个数据是“脏数据”，依据“脏数据”所做的操作可能是不正确的。 + 
*丢失修改*：指在一个事务读取一个数据时，另外一个事务也访问了该数据，那么在第一个事务中修改了这个数据后，第二个事务也修改了这个数据。这样第一个事务内的修改结果就被丢失，因此称为丢失修。 例如：事务1读取某表中的数据A=20，事务2也读取A=20，事务1修改A=A-1，事务2也修改A=A-1，最终结果A=19，事务1的修改被丢失。 + 
*不可重复读*：指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。 + 
*幻读*：幻读与不可重复读类似。它发生在一个事务（T1）读取了几行数据，接着另一个并发事务（T2）插入了一些数据时。在随后的查询中，第一个事务（T1）就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。

[NOTE]
====
*不可重复读和幻读区别*：
不可重复读的重点是修改比如多次读取一条记录发现其中某些列的值被修改，幻读的重点在于新增或者删除比如多次读取一条记录发现记录增多或减少了
====


==== 事务的隔离级别有哪些？
*READ-UNCOMMITTED(读取未提交)*： 最低的隔离级别，允许读取尚未提交的数据变更，可能会导致脏读、幻读或不可重复读。 + 
*READ-COMMITTED(读取已提交)*： 允许读取并发事务已经提交的数据，可以阻止脏读，但是幻读或不可重复读仍有可能发生。 + 
*REPEATABLE-READ(可重复读)*： 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，可以阻止脏读和不可重复读，但幻读仍有可能发生。 + 
*SERIALIZABLE(可串行化)*： 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，该级别可以防止脏读、不可重复读以及幻读。

image::事务隔离级别.png[]

[NOTE]
====
MYSQL默认的事务隔离级别是 *REPEATABLE-READ(可重复读)*。
====

