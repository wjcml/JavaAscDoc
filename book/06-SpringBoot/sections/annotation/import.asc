[[Import注解]]

==== @Import注解
*@Import* 是Spring基于 Java 注解配置的主要组成部分。@Import注解提供了@Bean注解的功能，同时还有原来Spring基于 xml 配置文件里的<import>标签组织多个分散的xml文件的功能，当然在这里是组织多个分散的 *@Configuration* 的类。

下面分别说明 *@Import* 注解的功能。

.*引入其他的 @Configuration*
假设有如下的接口和两个实现类：

[source, java]
----
interface ServiceInterface {
    void test();
}

class ServiceA implements ServiceInterface {

    @Override
    public void test() {
        System.out.println("ServiceA");
    }
}

class ServiceB implements ServiceInterface {

    @Override
    public void test() {
        System.out.println("ServiceB");
    }
}
----

两个被 @Configuration 注解的类，其中 ConfigA 上有 @Import(ConfigB.class) 注解

[source, java]
----
@Import(ConfigB.class)
@Configuration
class ConfigA {
    @Bean
    @ConditionalOnMissingBean
    public ServiceInterface getServiceA() {
        return new ServiceA();
    }
}

@Configuration
class ConfigB {
    @Bean
    @ConditionalOnMissingBean
    public ServiceInterface getServiceB() {
        return new ServiceB();
    }
}
----

通过 ConfigA 创建 AnnotationConfigApplicationContext，获取 ServiceInterface，看是哪种实现：

[source, java]
----
public static void main(String[] args) {
    ApplicationContext ctx = new AnnotationConfigApplicationContext(ConfigA.class);
    ServiceInterface bean = ctx.getBean(ServiceInterface.class);
    bean.test();
}
----

上面的代码最终输出为 `ServiceB`，*证明 @Import 的优先于本身的的类定义加载*。





