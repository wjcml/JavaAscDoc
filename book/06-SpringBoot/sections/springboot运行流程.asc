=== Spring Boot运行流程

在完成了 SpringApplication 的实例化之后，就会执行 SpringApplication 实例的 *run()* 方法，即真正的开始 Spring Boot 的启动和运行。首先，我们先通过一张流程图来认识一下 *run()* 方法的核心操作。如下图：

image::springApplication的run方法流程图.png[]

从上面的流程图可以看出，SpringApplication 在 run 方法中重点做了以下操作：

- 获取监听器和参数配置
- 打印Banner信息
- 创建并初始化容器
- 发送监听器通知

当然，除了以上的这些核心操作以外，run 方法运行过程中还涉及到启动时长统计、异常报告、启动日志、异常处理等辅助操作。

对照流程图，接下来，我们具体的看一下 run 方法的源码，如下图：

image::springboot运行流程run方法源码.png[]

从源码中，我们可以更加清晰的认识到 run 方法所做的事情，并且其中的核心操作被标注了出来。


==== SpringApplicationRunListener监听器

让我们跳过Spring Boot的计时和统计的辅助功能，直接来看 *SpringApplicationRunListeners* 的获取和使用。

*SpringApplicationRunListeners* 可以理解为一个 *SpringApplicationRunListener* 的容器，它将 *SpringApplicationRunListener* 的集合赋值给 *SpringApplicationRunListeners* 的 *listeners* （成员变量）。SpringApplication 中 *getRunListeners* 方法如下图：

image::springApplication的getRunListeners方法源码.png[]




