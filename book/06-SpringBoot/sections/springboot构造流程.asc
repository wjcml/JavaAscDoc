=== Spring Boot构造流程

Spring Boot 的启动代码非常简单，只有简单的几行代码，如下图：

image::springboot启动入口类代码.png[]

从上面的Spring Boot启动入口代码来看，Spring Boot通过调用 *SpringApplication* 的静态方法 *run* 方法来启动。我们点进 run 方法的源码看一下，如下图：

image::springboot的run方法.png[]

看了以上这两个 *run* 方法，可以看出，最后是创建了一个 *SpringApplication* 的对象，然后执行了这个对象的 *run* 方法。因此，我们的启动入口程序也可以写成：

[source, java]
----
@SpringBootApplication
public class SpringOauthApplication {
    public static void main(String[] args) {
        new SpringApplication(SpringOauthApplication.class).run(args);
    }
}
----

==== SpringApplication 实例化流程

现在我们知道要启动Spring Boot项目，首先需要实例化一个 *SpringApplication* 对象，那么接下来，我们看一下 *SpringApplication* 实例化的过程中具体做了什么操作，源码如下：

image::springboot的springapplication实例化.png[]

通过源码分析，我们用一张图来直观的表示 SpringApplication 实例化过程所做的事情，如下图：


从上图我们可以看出，在 SpringApplication 对象实例化的过程中主要做了 3 件事情：*参数赋值给成员变量，应用类型及方法推断和ApplicationContext相关内容加载及实例化*。

